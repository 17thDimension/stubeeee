init = ->
  container = document.createElement('div')
  document.body.appendChild container
  camera = new (THREE.PerspectiveCamera)(75, window.innerWidth / window.innerHeight, 1, 3000)
  camera.position.z = 1000
  scene = new (THREE.Scene)
  scene.fog = new (THREE.FogExp2)(0x000000, 0.0007)
  geometry = new (THREE.Geometry)
  i = 0
  while i < 20000
    vertex = new (THREE.Vector3)
    vertex.x = Math.random() * 2000 - 1000
    vertex.y = Math.random() * 2000 - 1000
    vertex.z = Math.random() * 2000 - 1000
    geometry.vertices.push vertex
    i++
  parameters = [
    [
      [
        1
        1
        0.5
      ]
      5
    ]
    [
      [
        0.95
        1
        0.5
      ]
      4
    ]
    [
      [
        0.90
        1
        0.5
      ]
      3
    ]
    [
      [
        0.85
        1
        0.5
      ]
      2
    ]
    [
      [
        0.80
        1
        0.5
      ]
      1
    ]
  ]
  i = 0
  while i < parameters.length
    color = parameters[i][0]
    size = parameters[i][1]
    materials[i] = new (THREE.PointCloudMaterial)(size: size)
    particles = new (THREE.PointCloud)(geometry, materials[i])
    particles.rotation.x = Math.random() * 6
    particles.rotation.y = Math.random() * 6
    particles.rotation.z = Math.random() * 6
    scene.add particles
    i++
  renderer = new (THREE.WebGLRenderer)
  renderer.setPixelRatio window.devicePixelRatio
  renderer.setSize window.innerWidth, window.innerHeight
  container.appendChild renderer.domElement
  document.addEventListener 'mousemove', onDocumentMouseMove, false
  document.addEventListener 'touchstart', onDocumentTouchStart, false
  document.addEventListener 'touchmove', onDocumentTouchMove, false
  #
  window.addEventListener 'resize', onWindowResize, false
  return

onWindowResize = ->
  windowHalfX = window.innerWidth / 2
  windowHalfY = window.innerHeight / 2
  camera.aspect = window.innerWidth / window.innerHeight
  camera.updateProjectionMatrix()
  renderer.setSize window.innerWidth, window.innerHeight
  return

onDocumentMouseMove = (event) ->
  mouseX = event.clientX - windowHalfX
  mouseY = event.clientY - windowHalfY
  return

onDocumentTouchStart = (event) ->
  if event.touches.length == 1
    event.preventDefault()
    mouseX = event.touches[0].pageX - windowHalfX
    mouseY = event.touches[0].pageY - windowHalfY
  return

onDocumentTouchMove = (event) ->
  if event.touches.length == 1
    event.preventDefault()
    mouseX = event.touches[0].pageX - windowHalfX
    mouseY = event.touches[0].pageY - windowHalfY
  return

#

animate = ->
  requestAnimationFrame animate
  render()
  return

render = ->
  time = Date.now() * 0.00005
  camera.position.x += (mouseX - (camera.position.x)) * 0.05
  camera.position.y += (-mouseY - (camera.position.y)) * 0.05
  camera.lookAt scene.position
  i = 0
  while i < scene.children.length
    object = scene.children[i]
    if object instanceof THREE.PointCloud
      object.rotation.y = time * (if i < 4 then i + 1 else -(i + 1))
    i++
  i = 0
  while i < materials.length
    color = parameters[i][0]
    h = 360 * (color[0] + time) % 360 / 360
    materials[i].color.setHSL h, color[1], color[2]
    i++
  renderer.render scene, camera
  return

if !Detector.webgl
  Detector.addGetWebGLMessage()
container = undefined
camera = undefined
scene = undefined
renderer = undefined
particles = undefined
geometry = undefined
materials = []
parameters = undefined
i = undefined
h = undefined
color = undefined
size = undefined
mouseX = 0
mouseY = 0
windowHalfX = window.innerWidth / 2
windowHalfY = window.innerHeight / 2
document.addEventListener 'DOMContentLoaded', ->
  init()
  animate()
  return

# ---
# generated by js2coffee 2.0.4
